# Notes

        """
            if event.type == pg.QUIT:
                self.quitting = True

            # Keyboard - key pressed
            if event.type == pg.KEYDOWN:
                match event.key:
                    case pg.K_q | pg.K_ESCAPE: self.user_input['quit'] = True
                    case pg.K_RIGHT: self.user_input['right'] = True
                    case pg.K_LEFT: self.user_input['left'] = True
                    case pg.K_UP: self.user_input['up'] = True
                    case pg.K_DOWN: self.user_input['down'] = True
                    case pg.K_SPACE: self.user_input['attack'] = True

            # Keyboard - key let go of
            if event.type == pg.KEYUP:
                match event.key:
                    case pg.K_RIGHT: self.user_input['right'] = False
                    case pg.K_LEFT: self.user_input['left'] = False
                    case pg.K_UP: self.user_input['up'] = False
                    case pg.K_DOWN: self.user_input['down'] = False
                    case pg.K_SPACE: self.user_input['attack'] = False

            if event.type == pg.JOYBUTTONDOWN:
                match event.button:
                    case 0: self.user_input['up'] = True
                    case 1: self.user_input['cast'] = True
                    case 2: self.user_input['attack'] = True

            if event.type == pg.JOYBUTTONUP:
                match event.button:
                    case 0: self.user_input['up'] = False
                    case 1: self.user_input['cast'] = False
                    case 2: self.user_input['attack'] = False

            if event.type == pg.JOYAXISMOTION and event.axis == 0:
                if event.value < -0.1:
                    self.user_input['left'] = True
                elif event.value > 0.1:
                    self.user_input['right'] = True
                else:
                    self.user_input['left'] = False
                    self.user_input['right'] = False

            if event.type == pg.JOYHATMOTION:
                # print(event)
                pass
        """